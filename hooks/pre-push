#!/bin/bash

# AmÃ©lioration du hook pre-push : recherche un interprÃ©teur Python cross-plateforme

SCRIPT_PATH="scripts/review_mailer.py"whe

# DEBUG: informations utiles pour diagnostiquer l'environnement d'exÃ©cution du hook
echo "--- pre-push debug start ---" >&2
echo "User: $(whoami)" >&2
echo "PWD: $(pwd)" >&2
echo "Git dir: $(git rev-parse --git-dir 2>/dev/null)" >&2
echo "Shell: $SHELL" >&2
echo "PATH: $PATH" >&2

echo "command -v python3: " >&2; command -v python3 2>/dev/null || echo "(python3 not found)" >&2
echo "command -v python: " >&2; command -v python 2>/dev/null || echo "(python not found)" >&2
echo "command -v py: " >&2; command -v py 2>/dev/null || echo "(py not found)" >&2

# Afficher type/which pour plus d'infos (peut afficher plusieurs rÃ©sultats)
{ type -a python3 2>/dev/null || true; } >&2
{ type -a python 2>/dev/null || true; } >&2
{ type -a py 2>/dev/null || true; } >&2

# Tenter d'exÃ©cuter les versions (capturer les sorties)
python --version 2>&1 || echo "python --version failed" >&2
python3 --version 2>&1 || echo "python3 --version failed" >&2
py -3 -V 2>&1 || echo "py -3 -V failed" >&2

# Fin debug
echo "--- pre-push debug end ---" >&2

# Email de l'auteur du commit
RECIPIENT_EMAIL=$(git log -1 --pretty=format:'%ae')

# Tous les fichiers staged pour le push
CHANGED_FILES=$(git diff --cached --name-only | paste -sd "," -)

# Trouver un exÃ©cutable Python
if command -v python3 >/dev/null 2>&1; then
  PY_EXEC="python3"
elif command -v python >/dev/null 2>&1; then
  PY_EXEC="python"
else
  # Essayer le lanceur Windows 'py -3'
  if command -v py >/dev/null 2>&1 && py -3 -V >/dev/null 2>&1; then
    PY_EXEC="py -3"
  else
    echo "Python introuvable. Installez Python ou ajustez le hook pour utiliser le bon exÃ©cutable." >&2
    exit 1
  fi
fi

# ExÃ©cuter le script (gÃ©rer le cas oÃ¹ PY_EXEC contient un espace pour 'py -3')
if [ "$PY_EXEC" = "py -3" ]; then
  eval "$PY_EXEC \"$SCRIPT_PATH\" \"$RECIPIENT_EMAIL\" \"$CHANGED_FILES\""
else
  "$PY_EXEC" "$SCRIPT_PATH" "$RECIPIENT_EMAIL" "$CHANGED_FILES"
fi

EXIT_CODE=$?
if [ $EXIT_CODE -ne 0 ]; then
    echo "ðŸš« Push annulÃ© : des erreurs de code ont Ã©tÃ© dÃ©tectÃ©es." >&2
    exit 1
fi

exit 0
